@model MusicRaterWebApp.ViewModels.AlbumDescriptionViewModel
@{
    ViewBag.Title = "Album Info";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.album.bandName - @Model.album.albumName</h2>
<hr />
<body>
    <div id="spotifyPlayer">
        @if (Model.spotifyURI != "")
        {
            <iframe src=@Model.spotifyURI width="300" height="380" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>
            <br />
            <button data-album-id="@Model.album.albumId" class="btn btn-default js-addSpotify">Edit Spotify</button>
        }
        else
        {
            <iframe src=@Model.spotifyURI width="300" height="380" frameborder="0" allowtransparency="true" allow="encrypted-media" style="display:none;" id="player"></iframe>
            <br />
            <button data-album-id="@Model.album.albumId" class="btn btn-default js-addSpotify">Add Spotify</button>
        }
        @if (Model.know)
        {
            <button data-userRank-id="@Model.albumRankId" data-know="@(!Model.know)" class="btn btn-default js-know">Don't Know This Album</button>
        }
        else
        {
            <button data-userRank-id="@Model.albumRankId" data-know="@(!Model.know)" class="btn btn-default js-know">I Know This Album</button>
        }
    </div>
    <div id="album-info">
        @if (Model.albumImagePath == "")
        {
            <img src="~/Images/noImage.png" style="height:300px;width:300px;" id="albumCoverImage" />
            <h3>
                Change Image:
            </h3>
            <input type="file" class="form-control-file" id="upload" data-album-id="@Model.album.albumId" accept="image/*" />
        }
        else
        {
            <img src=@Model.albumImagePath style="height:300px;width:300px;" id="albumCoverImage" />
            <h3>
                Change Image:
            </h3>
            <input type="file" class="form-control-file" id="upload" data-album-id="@Model.album.albumId" accept="image/*" />
        }
        <table id="albums" class="table table-bordered table-hover">
            <tbody>
                <tr>
                    <td>
                        Album
                    </td>
                    <td style="width: 500px;">
                        @Model.album.albumName
                    </td>
                </tr>
                <tr>
                    <td>
                        Artist
                    </td>
                    <td style="width: 500px;">
                        @Model.album.bandName
                    </td>
                </tr>
                <tr>
                    <td>
                        Year
                    </td>
                    <td style="width: 500px;">
                        @Model.album.year
                    </td>
                </tr>
                <tr>
                    <td>
                        Genres
                    </td>
                    <td style="width: 500px;">
                        @if (Model.genres.Count > 0)
                        {
                            @Model.genres[0].genre
                        }
                    </td>
                </tr>
            </tbody>
        </table>
        <p><a class="btn btn-default" href="/Album/Edit/@Model.album.albumId">Edit</a></p>
        <button class="btn btn-default js-writeReview" js>Write a review</button>
    </div>
    <div id="writeReview" hidden>
        <h3>Write a review</h3>
        <textarea id="reviewTextArea" style="width:250px;height:150px;resize:none;" maxlength="500"></textarea>
        <br />
        <button class="btn btn-default  js-saveReview" data-albumId=@Model.album.albumId>Save</button>
        <button class="btn btn-default js-cancelReview">Cancel</button>
    </div>

</body>

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#spotifyPlayer .js-addSpotify").on("click", function () {
                var spotifyUri = prompt("Please enter Spotify URI");

                if (spotifyUri != null) {
                    $.ajax({
                        url: "/api/albums" + "?id=" + $(this).attr("data-album-id") + "&uri=" + spotifyUri,
                        method: "PUT",
                        success: function () {
                            var toUpdate = "https://open.spotify.com/embed?uri=" + spotifyUri;
                            $('#player').attr('src', toUpdate);
                            $('#player').show();
                            $("#spotifyPlayer .js-addSpotify").text("Edit Spotify");
                        }
                    });
                }
            });
            $("#spotifyPlayer .js-know").on("click", function () {
                var knowButton = $(this)
                $.ajax({
                    url: "/api/useralbumranks/haveheard/?id=" + $(this).attr("data-userRank-id") + "&know=" + $(this).attr("data-know"),
                    method: "PUT",
                    success: function () {
                        if (knowButton.text() === "I Know This Album") {
                            knowButton.attr('data-know', 'False');
                            knowButton.text("Don't Know This Album");
                        } else {
                            knowButton.attr('data-know', 'True');
                            knowButton.text("I Know This Album");
                        };
                    }
                });
            });
            $("#upload").on('change', function () {
                var data = new FormData();
                var files = $(this)[0].files[0];
                var type = files["type"];
                var ValidImageTypes = ["image/gif", "image/jpeg", "image/png"];
                if ($.inArray(type, ValidImageTypes) > 0 && files.size < 100000) {
                    data.append("File", $(this)[0].files[0]);
                    data.append("AlbumId", $(this).attr("data-album-id"));
                    $.ajax({
                        url: "/api/albums/uploadfile",
                        method: "PUT",
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (response) {
                            $('#albumCoverImage').attr('src', response);
                        },

                    });
                }
                else {
                    alert("The image is too large. Please make sure the image is smaller than 100KB");
                }

            });
            $('#album-info .js-writeReview').on("click", function () {
                $('#writeReview').show();
            });
            $('#writeReview .js-cancelReview').on("click", function () {
                $('#writeReview').hide();
            });
            $('#writeReview .js-saveReview').on("click", function () {
                var saveButton = $(this);
                var review = $('#reviewTextArea').val();
                var url = "/api/users/writereview/?albumId=" + $(this).attr("data-albumId") + "&review=" + review
                console.log(url);
                $.ajax({
                    url: "/api/users/writereview/?albumId=" + $(this).attr("data-albumId") + "&review=" + review,
                    method: "PUT",
                    success: function () {
                        $('#writeReview').hide();
                    }
                });

            });
        });

    </script>
}